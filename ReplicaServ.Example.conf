################## Lisez-moi
#
# Exemple de fichier de configuration pour les services ReplicaServ.
# Après avoir apporté les modifications appropriées à ce fichier,
# placez-le sous le nom "ReplicaServ.conf".
#
###

#########################################
#-->			UpLink				 <--#
#########################################
#
# Cette section est utilisée pour configurer ReplicaServ
# pour se connecter à votre réseau IRC.
#
# Votre serveur IRCD doit avoir une configuration 
# correspondante pour autoriser le service ReplicaServ à y accéder
#
# Un exemple de configuration pour UnrealIRCd compatible avec la Link ci-dessous
# et la configuration de serverinfo ressemblerait à:
#
#	link ReplicaServ.eggdrop.fr
#	{
#		username *;
#		hostname *;
#		bind-ip "127.0.0.1";
#		port 7000;
#		hub *;
#		password-connect "mypassword";
#		password-receive "mypassword";
#		class servers;
# 	};
# 	ulines { ReplicaServ.eggdrop.fr; };
# 	listen 127.0.0.1:7000;
#
#########################################

###
#
# L'adresse IP ou le nom d'hôte du serveur IRC auquel vous souhaitez connecter les services.
# Habituellement, vous voudrez connecter le service sur 127.0.0.1 (aka localhost).
### ->
set config(uplink_host)			"127.0.0.1"

###
# Activez avec la valeur 1 si le service doit se connecter à l'aide de SSL.
# Desactiver avec la valeur 0
### ->
set config(uplink_ssl)			1

# Le port auquel se connecter.
# L'IRCd *DOIT* être configuré pour écouter sur ce port et pour accepter les connexions de serveur.
# Reportez-vous à votre documentation IRCd pour savoir comment procéder.
set config(uplink_port)			"7000"

###
# Le mot de passe à envoyer au serveur IRC pour l'authentification.
# Cela doit correspondre au bloc de Link sur votre IRCd.
#
# Reportez-vous à votre documentation IRCd pour plus d'informations sur les blocs de Link.
### ->
set config(uplink_password)		"mypassword"

#########################################
#-->			ServerInfo			 <--#
#########################################

###
# Le nom d'hôte de ReplicaServ service, il ne doit avoir aucun conflit avec d'autres noms de serveur sur le reste de votre réseau IRC.
# Notez qu'il n'est pas nécessaire qu'il s'agisse d'un nom d'hôte existant, mais simplement d'un nom d'hôte qui n'est pas déjà sur votre réseau.
### ->
set config(serverinfo_name)		"ReplicaServ.eggdrop.fr"

###
# Le texte qui devra apparaître comme informations du serveur dans le /whois et les requêtes similaires.
### ->
set config(serverinfo_descr)	"ReplicaServ Service"

###
# Quel ID de serveur utiliser pour cette connexion?
# Remarque: Ceci doit être utilisé pour les IRCds TS6/P10.
# Reportez-vous à votre documentation IRCd pour voir si cela est nécessaire.
### ->

# Si vous utilisez un "ancien serveur ircd" commentez ceci:
#								[0-9][A-Z0-9][A-Z0-9]
# https://docs.ratbox.org/ircd_ts6.php
set config(serverinfo_id)		"00R"
# et decommentez cela:
#set config(serverinfo_id)		""

###
# S'il est défini, cela permettra aux utilisateurs de laisser les services leur envoyer des PRIVMSG au lieu de NOTICE.
# Valeur: 1 pour oui, 0 pour non
### ->
set config(uplink_useprivmsg)	1

###
# Activez le mode debug socket?
### ->
set config(uplink_debug)		0

#########################################
#-->			Services			 <--#
#########################################

###
# Le nom du client ReplicaServ.
### ->
set config(service_nick)		"ReplicaServ"

###
# Le nom d'utilisateur du client ReplicaServ.	
### ->
set config(service_user)		"services"

###
# Le nom d'hôte du client ReplicaServ.
### ->
set config(service_host)		"ReplicaServ.eggdrop.fr"

###
# Le realname du client ReplicaServ.
### ->
set config(service_gecos)		"Visit: https://git.io/JYGvA"

###
# Les modes que le client doit utiliser.
# Ne modifiez pas ceci à moins que vous ne sachiez ce que vous faites.
# Ces modes sont très spécifiques à IRCd. Laissé les valeurs par défaut, a moins savoir ce que vous faite.
# Notez que la définition incorrecte de cette option pourrait potentiellement casser/crasher une partie, sinon la totalité, de l'utilisation du client. 
##
# DefaultPseudoclientModes :
#	*	InspIRCd 2.0				:	+I
#	*	Ratbox 3.0+					:	+oiS
#	*	InspIRCd 3					:	+I
#	*	Bahamut 1.8.x				:	+
#	*	hybrid-7.2.3+plexus-3.0.1	:	+iU
#	*	Charybdis 3.4+				:	+oiS
#	*	InspIRCd 1.2				:	+I
#	*	ngIRCd						:	+oi
#	*	ircd-hybrid 8.2.23+			:	+oi
#	*	UnrealIRCd 3.2.x			:	+Soiq
#	*	UnrealIRCd 4+				:	+Soiq
#
### ->
set config(service_modes)		"+Soiq"

###
# Le canal de journalisation d'activité que le client doit utiliser.
### ->
set config(service_channel)		"#Services"

###
# Les modes du salon de logs (service_channel).
#
# mode	Description				Restrictions
#	i	Invite only. 			Requires people to be /INVITE'd to the channel or be on the +I (Invite Exceptions)
#								list (for that latter, see the List modes section above)	
#								Requires +o or higher
#
#	k	Require users to specify a channel key in order to join (/JOIN #chan key).
#		Example: +k secret															
#								Requires +h or higher
#
#	L	Channel link.
#		If the +l user limit (see below) is reached then users will automatically be redirected to this channel. #		Example: +L #something
#								Requires +o or higher
#
#	l	Limit the amount of users that may be in the channel.
#		If the limit is reached then any new JOIN's are rejected (see also +L above).
#								Requires +o or higher
#
#	m	Moderated channel.		Only people with +v or higher (+vhoaq) may speak.	
#								Requires +h or higher
#
#	n	No external messages.	If you don't set +n then users outside the channel may still send messages to it.
#								Thus, almost everyone will set their channel +n.
#								Requires +h or higher
#
#	p	Private channel.		Partially conceals the existence of the channel.
#								Users cannot see this channel name unless they are a member of it. For example,
#								if you /WHOIS a user who is on a +p channel, this channel is omitted from the response
#								- unless you are on the same channel. IRC Operators will always see +p channels and its members.	#								Requires +o or higher
#
#	r	Channel is registered at Services	
#								Set by services
#
#	s	Secret channel. 		Extends the functionality of +p (above), but in addition to this, 
#								it will act as if the channel does not exist at all for queries like /TOPIC, /LIST and /NAMES.
#								One exception to this is that it will always respond to the /MODE command.
#								IRC Operators will always see +s channels and its members.
#								Requires +o or higher
### ->
set config(service_chanmodes)	"+Osnt"

###
# Le mode user de ReplicaServ quand elle join un salon.
#
# mode	Description		Restrictions
#	v	Voice. 			This makes the user able to speak in +m/+M channels. User can also still speak if banned.
#						May be set by +hoaq users
#
#	h	Half-Op. 		Gives some of the usual channel operator rights, but not all.
#						They are basically a light version of channel ops.	May be set by +oaq users
#
#	o	Channel Op. 	This is the channel operator privilege everyone knows about,
#						allows the user to do almost all administrative tasks in a channel such as /KICK, /MODE, etc..
#						May be set by +oaq users
#
#	a	Channel Admin.	A level above channel ops but with no special extra privileges except for one: 
#						people below chanadmin (so +h/+o) cannot KICK +a people.
#						May be set by +q users
#
#	q	Channel Owner.	The highest level. Channel owners can't be kicked by any level below.
#						Usually there's only one person with +q and the mode is set by services.	
#						Normal users can't set this
### ->
set config(service_usermodes)	"+o"

#########################################
#-->			Autres				 <--#
#########################################

###
#Mettez ci-dessous votre pass
### ->
set config(admin_password)		"votre-mot-2-pass"

###
# Activation de la console (1)oui (0)non
### ->
set config(admin_console)		1

### -> Félicitation, vous êtes arrivez a la fin <- ###

